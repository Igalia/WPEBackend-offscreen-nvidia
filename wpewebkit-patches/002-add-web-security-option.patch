From 55a8070fbbfdac663b0c5b64582fb9c31d9279e0 Mon Sep 17 00:00:00 2001
From: Przemyslaw Gorszkowski <pgorszkowski@igalia.com>
Date: Wed, 16 Nov 2022 12:29:08 +0100
Subject: [PATCH] [GTK][WPE] Add provision to enable / disable websecurity
 https://bugs.webkit.org/show_bug.cgi?id=246606

---
 .../UIProcess/API/glib/WebKitSettings.cpp     | 65 +++++++++++++++++++
 .../WebKit/UIProcess/API/wpe/WebKitSettings.h |  6 ++
 .../Tests/WebKitGLib/TestWebKitSettings.cpp   |  5 ++
 3 files changed, 76 insertions(+)

diff --git a/Source/WebKit/UIProcess/API/glib/WebKitSettings.cpp b/Source/WebKit/UIProcess/API/glib/WebKitSettings.cpp
index c79a3fc0..897600ba 100644
--- a/Source/WebKit/UIProcess/API/glib/WebKitSettings.cpp
+++ b/Source/WebKit/UIProcess/API/glib/WebKitSettings.cpp
@@ -172,6 +172,7 @@ enum {
     PROP_ENABLE_MEDIA,
     PROP_MEDIA_CONTENT_TYPES_REQUIRING_HARDWARE_SUPPORT,
     PROP_ENABLE_WEBRTC,
+    PROP_ENABLE_WEBSECURITY,
     N_PROPERTIES,
 };

@@ -402,6 +403,9 @@ ALLOW_DEPRECATED_DECLARATIONS_END
     case PROP_ENABLE_WEBRTC:
         webkit_settings_set_enable_webrtc(settings, g_value_get_boolean(value));
         break;
+    case PROP_ENABLE_WEBSECURITY:
+        webkit_settings_set_enable_websecurity(settings, g_value_get_boolean(value));
+        break;
     default:
         G_OBJECT_WARN_INVALID_PROPERTY_ID(object, propId, paramSpec);
         break;
@@ -603,6 +607,9 @@ ALLOW_DEPRECATED_DECLARATIONS_END
     case PROP_ENABLE_WEBRTC:
         g_value_set_boolean(value, webkit_settings_get_enable_webrtc(settings));
         break;
+    case PROP_ENABLE_WEBSECURITY:
+        g_value_set_boolean(value, webkit_settings_get_enable_websecurity(settings));
+        break;
     default:
         G_OBJECT_WARN_INVALID_PROPERTY_ID(object, propId, paramSpec);
         break;
@@ -1588,6 +1595,25 @@ static void webkit_settings_class_init(WebKitSettingsClass* klass)
         FALSE,
         readWriteConstructParamFlags);

+    /**
+     * WebKitSettings:enable-websecurity:
+     *
+     * Enable or disable support for Web Security on pages.
+     *
+     * This setting disables the same-origin policy, allowing every website full control over
+     * all other websites. This is for use in special environments where you wish to disable
+     * all security and allow websites to hack each other. It is impossible to use this setting
+     * securely.
+     *
+     * Since: 2.38
+     */
+    sObjProperties[PROP_ENABLE_WEBSECURITY] = g_param_spec_boolean(
+        "enable-websecurity",
+        _("Enable websecurity"),
+        _("Whether websecurity should be enabled."),
+        TRUE,
+        readWriteConstructParamFlags);
+
     g_object_class_install_properties(gObjectClass, N_PROPERTIES, sObjProperties);
 }

@@ -3958,3 +3984,42 @@ void webkit_settings_set_media_content_types_requiring_hardware_support(WebKitSe
     priv->mediaContentTypesRequiringHardwareSupport = mediaContentTypesRequiringHardwareSupportString.utf8();
     g_object_notify_by_pspec(G_OBJECT(settings), sObjProperties[PROP_MEDIA_CONTENT_TYPES_REQUIRING_HARDWARE_SUPPORT]);
 }
+
+/**
+ * webkit_settings_get_enable_websecurity:
+ * @settings: a #WebKitSettings
+ *
+ * Get the #WebKitSettings:enable-websecurity property.
+ *
+ * Returns: %TRUE If websecurity support is enabled or %FALSE otherwise.
+ *
+ * Since: 2.38
+*/
+gboolean webkit_settings_get_enable_websecurity(WebKitSettings* settings)
+{
+    g_return_val_if_fail(WEBKIT_IS_SETTINGS(settings), FALSE);
+
+    return settings->priv->preferences->webSecurityEnabled();
+}
+
+/**
+ * webkit_settings_set_enable_websecurity:
+ * @settings: a #WebKitSettings
+ * @enabled: Value to be set
+ *
+ * Set the #WebKitSettings:enable-websecurity property.
+ *
+ * Since: 2.38
+ */
+void webkit_settings_set_enable_websecurity(WebKitSettings* settings, gboolean enabled)
+{
+    g_return_if_fail(WEBKIT_IS_SETTINGS(settings));
+
+    WebKitSettingsPrivate* priv = settings->priv;
+    bool currentValue = priv->preferences->webSecurityEnabled();
+    if (currentValue == enabled)
+        return;
+
+    priv->preferences->setWebSecurityEnabled(enabled);
+    g_object_notify_by_pspec(G_OBJECT(settings), sObjProperties[PROP_ENABLE_WEBSECURITY]);
+}
diff --git a/Source/WebKit/UIProcess/API/wpe/WebKitSettings.h b/Source/WebKit/UIProcess/API/wpe/WebKitSettings.h
index 09d8ead0..31805556 100644
--- a/Source/WebKit/UIProcess/API/wpe/WebKitSettings.h
+++ b/Source/WebKit/UIProcess/API/wpe/WebKitSettings.h
@@ -479,6 +479,12 @@ WEBKIT_API void
 webkit_settings_set_enable_webrtc                              (WebKitSettings *settings,
                                                                 gboolean enabled);

+WEBKIT_API gboolean
+webkit_settings_get_enable_websecurity                         (WebKitSettings *settings);
+
+WEBKIT_API void
+webkit_settings_set_enable_websecurity                         (WebKitSettings *settings,
+                                                                gboolean        enabled);
 G_END_DECLS

 #endif /* WebKitSettings_h */
diff --git a/Tools/TestWebKitAPI/Tests/WebKitGLib/TestWebKitSettings.cpp b/Tools/TestWebKitAPI/Tests/WebKitGLib/TestWebKitSettings.cpp
index e224df80..9e8d78a2 100644
--- a/Tools/TestWebKitAPI/Tests/WebKitGLib/TestWebKitSettings.cpp
+++ b/Tools/TestWebKitAPI/Tests/WebKitGLib/TestWebKitSettings.cpp
@@ -378,6 +378,11 @@ ALLOW_DEPRECATED_DECLARATIONS_BEGIN
     Test::addLogFatalFlag(G_LOG_LEVEL_WARNING);
 ALLOW_DEPRECATED_DECLARATIONS_END

+    // WebSecurity is enabled by default.
+    g_assert_true(webkit_settings_get_enable_websecurity(settings));
+    webkit_settings_set_enable_websecurity(settings, FALSE);
+    g_assert_false(webkit_settings_get_enable_websecurity(settings));
+
     g_object_unref(G_OBJECT(settings));
 }

--
2.34.1
EOF
